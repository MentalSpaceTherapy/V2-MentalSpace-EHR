name: CI Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
    types: [opened, synchronize, reopened]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint code
      run: npm run lint
    
    - name: Type check
      run: npm run test:types

  test:
    runs-on: ubuntu-latest
    needs: validate
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mental_space_ehr_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create .env file
      run: |
        echo "NODE_ENV=test" > .env.test
        echo "PORT=3001" >> .env.test
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/mental_space_ehr_test" >> .env.test
        echo "SESSION_SECRET=test_secret_key_for_ci" >> .env.test
        echo "JWT_SECRET=test_jwt_secret_key_for_ci" >> .env.test
    
    - name: Run database migrations
      run: npm run init-db
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/mental_space_ehr_test
    
    - name: Run backend unit tests
      run: npm run test:unit
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/mental_space_ehr_test
    
    - name: Run backend integration tests
      run: npm run test:integration
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/mental_space_ehr_test
    
    - name: Run frontend tests
      run: npm run test:frontend:ci
    
    - name: Run E2E tests
      run: npm run test:e2e:ci
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/mental_space_ehr_test
    
    - name: Generate coverage report
      run: npm run test:coverage
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/mental_space_ehr_test
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage
        fail_ci_if_error: false
        flags: unittests
        name: codecov-umbrella
        verbose: true

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          dist
          client/dist
          
  pr-feedback:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [test, build]
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Add PR comment with test results
      uses: thollander/actions-comment-pull-request@v2
      with:
        message: |
          ## ✅ CI Pipeline Passed Successfully!
          
          All tests are passing. The pull request can be merged once it's been reviewed.
          
          ### Summary
          - ✅ Code validation (linting and type checking)
          - ✅ Unit tests
          - ✅ Integration tests
          - ✅ End-to-end tests
          - ✅ Build successful
                    
          [View full test results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
        
        comment_tag: execution_result
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 